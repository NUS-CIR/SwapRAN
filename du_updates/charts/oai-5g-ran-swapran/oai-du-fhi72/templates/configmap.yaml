apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-configmap
data:
  du.conf: |
      Active_gNBs = ( "{{ .Values.config.duName}}");
      # Asn1_verbosity, choice in: none, info, annoying
      Asn1_verbosity = "none";

      gNBs =
      (
       {
          ////////// Identification parameters:
          gNB_ID = 0xe00;
          gNB_DU_ID = {{ .Values.config.duId }};

      #     cell_type =  "CELL_MACRO_GNB";

          gNB_name  =  "{{ .Values.config.duName }}";

          // Tracking area code, 0x0000 and 0xfffe are reserved values
          tracking_area_code  = {{ .Values.config.tac }} ;
          plmn_list = ({ mcc = {{ .Values.config.mcc }}; mnc = {{ .Values.config.mnc }}; mnc_length = 2; snssaiList = ({ sst = {{ .Values.config.sst }} }) });

          nr_cellid = {{ .Values.config.nr_cellid }};

          ////////// Physical parameters:

          pdsch_AntennaPorts_XP = 2;
          pdsch_AntennaPorts_N1 = 2;
          maxMIMO_layers        = 4;
          pusch_AntennaPorts    = 4;
          do_CSIRS              = 1;
          do_SRS                = 0;
          sib1_tda			        = 15;
          #force_UL256qam_off    = 1;

          servingCellConfigCommon = (
          {
       #spCellConfigCommon

            physCellId                                                    = {{ .Values.config.phyCellId }};

      #  downlinkConfigCommon
          #frequencyInfoDL
            absoluteFrequencySSB                                          = 627456;
            dl_frequencyBand                                                 = 78;
            # this is 3600 MHz
            dl_absoluteFrequencyPointA                                       = 626760;
            #scs-SpecificCarrierList
              dl_offstToCarrier                                              = 0;
      # subcarrierSpacing
      # 0=kHz15, 1=kHz30, 2=kHz60, 3=kHz120  
              dl_subcarrierSpacing                                           = 1;
              dl_carrierBandwidth                                            = 106;
           #initialDownlinkBWP
            #genericParameters
              # this is RBstart=27,L=48 (275*(L-1))+RBstart
              initialDLBWPlocationAndBandwidth                               = 28875; # 6366 12925 12956 28875 12952
      # subcarrierSpacing
      # 0=kHz15, 1=kHz30, 2=kHz60, 3=kHz120  
              initialDLBWPsubcarrierSpacing                                           = 1;
            #pdcch-ConfigCommon
              initialDLBWPcontrolResourceSetZero                              = 11;
              initialDLBWPsearchSpaceZero                                             = 0;

        #uplinkConfigCommon 
           #frequencyInfoUL
            ul_frequencyBand                                                 = 78;
            #scs-SpecificCarrierList
            ul_offstToCarrier                                              = 0;
      # subcarrierSpacing
      # 0=kHz15, 1=kHz30, 2=kHz60, 3=kHz120  
            ul_subcarrierSpacing                                           = 1;
            ul_carrierBandwidth                                            = 106;
            pMax                                                          = 23;
           #initialUplinkBWP
            #genericParameters
              initialULBWPlocationAndBandwidth                            = 28875;
      # subcarrierSpacing
      # 0=kHz15, 1=kHz30, 2=kHz60, 3=kHz120  
              initialULBWPsubcarrierSpacing                                           = 1;
            #rach-ConfigCommon
              #rach-ConfigGeneric
                prach_ConfigurationIndex                                  = 159;
      #prach_msg1_FDM
      #0 = one, 1=two, 2=four, 3=eight
                prach_msg1_FDM                                            = 0;
                prach_msg1_FrequencyStart                                 = 0;
                zeroCorrelationZoneConfig                                 = 0;
                preambleReceivedTargetPower                               = -150;
      #preamblTransMax (0...10) = (3,4,5,6,7,8,10,20,50,100,200)
                preambleTransMax                                          = 0;
      #powerRampingStep
      # 0=dB0,1=dB2,2=dB4,3=dB6
              powerRampingStep                                            = 3;
      #ra_ReponseWindow
      #1,2,4,8,10,20,40,80
              ra_ResponseWindow                                           = 5;
      #ssb_perRACH_OccasionAndCB_PreamblesPerSSB_PR
      #1=oneeighth,2=onefourth,3=half,4=one,5=two,6=four,7=eight,8=sixteen
              ssb_perRACH_OccasionAndCB_PreamblesPerSSB_PR                = 4;
      #oneHalf (0..15) 4,8,12,16,...60,64
              ssb_perRACH_OccasionAndCB_PreamblesPerSSB                   = 15;
      #ra_ContentionResolutionTimer
      #(0..7) 8,16,24,32,40,48,56,64
              ra_ContentionResolutionTimer                                = 7;
              rsrp_ThresholdSSB                                           = 19;
      #prach-RootSequenceIndex_PR
      #1 = 839, 2 = 139
              prach_RootSequenceIndex_PR                                  = 2;
              prach_RootSequenceIndex                                     = 1;
              # SCS for msg1, can only be 15 for 30 kHz < 6 GHz, takes precendence over the one derived from prach-ConfigIndex
              #  
              msg1_SubcarrierSpacing                                      = 1,
      # restrictedSetConfig
      # 0=unrestricted, 1=restricted type A, 2=restricted type B
              restrictedSetConfig                                         = 0,

              msg3_DeltaPreamble                                          = 3;
              p0_NominalWithGrant                                         = -96;

      # pucch-ConfigCommon setup :
      # pucchGroupHopping
      # 0 = neither, 1= group hopping, 2=sequence hopping
              pucchGroupHopping                                           = 0;
              hoppingId                                                   = 0;
              p0_nominal                                                  = -96;
      # ssb_PositionsInBurs_BitmapPR
      # 1=short, 2=medium, 3=long
            # ssb_PositionsInBurst_PR                                       = 2;
            ssb_PositionsInBurst_Bitmap                                   = 1;

      # ssb_periodicityServingCell
      # 0 = ms5, 1=ms10, 2=ms20, 3=ms40, 4=ms80, 5=ms160, 6=spare2, 7=spare1 
            ssb_periodicityServingCell                                    = 2;

      # dmrs_TypeA_position
      # 0 = pos2, 1 = pos3
            dmrs_TypeA_Position                                           = 0;

      # subcarrierSpacing
      # 0=kHz15, 1=kHz30, 2=kHz60, 3=kHz120  
            subcarrierSpacing                                             = 1;


        #tdd-UL-DL-ConfigurationCommon
      # subcarrierSpacing
      # 0=kHz15, 1=kHz30, 2=kHz60, 3=kHz120  
            referenceSubcarrierSpacing                                    = 1;
            # pattern1 
            # dl_UL_TransmissionPeriodicity
            # 0=ms0p5, 1=ms0p625, 2=ms1, 3=ms1p25, 4=ms2, 5=ms2p5, 6=ms5, 7=ms10
            dl_UL_TransmissionPeriodicity                                 = 5;
            nrofDownlinkSlots                                             = 3;
            nrofDownlinkSymbols                                           = 10;
            nrofUplinkSlots                                               = 1;
            nrofUplinkSymbols                                             = 2;

            ssPBCH_BlockPower                                             = -15;
           }

        );

        # ------- TIMER definitions
          TIMERS :
          {
              t300                   = 200;
              t301                   = 300;
              t310                   = 50;
              n310                   = 2;
              t311                   = 3000;
              n311                   = 2;
              t319                   = 200; 
          };

        # ------- SCTP definitions
          SCTP :
          {
              # Number of streams to use in input/output
              SCTP_INSTREAMS  = 2;
              SCTP_OUTSTREAMS = 2;
          };
        }
      );

      MACRLCs = (
        {
          num_cc           = 1;
          tr_s_preference  = "local_L1";
          tr_n_preference  = "f1";
          local_n_if_name = "{{ .Values.config.f1IfName}}";
          local_n_address = "@F1_DU_IP_ADDRESS@";
          remote_n_address = "@CU_IP_ADDRESS@";
          local_n_portc   = 500;
          local_n_portd   = {{ .Values.config.f1duPort}};
          remote_n_portc  = 501;
          remote_n_portd  = {{ .Values.config.f1cuPort}};
          pusch_TargetSNRx10          = 180;
          pucch_TargetSNRx10          = 220;
          dl_bler_target_upper        = .35;
          dl_bler_target_lower        = .30;
          ul_bler_target_upper        = .35;
          ul_bler_target_lower        = .15;
          pusch_FailureThres          = 1000;
          ul_max_mcs                  = 28;
        }
      );

      L1s = (
      {
        num_cc = 1;
        tr_n_preference = "local_mac";
        prach_dtx_threshold = 100;
        pucch0_dtx_threshold = 80;
        pusch_dtx_threshold = 10;
        max_ldpc_iterations = 20;
        tx_amp_backoff_dB = 12; # needs to match O-RU configuration
        L1_rx_thread_core = 8;
        L1_tx_thread_core = 10;
        phase_compensation = 0; # needs to match O-RU configuration
      }
      );

      RUs = (
      {
        local_rf       = "no";
        nb_tx          = 4;
        nb_rx          = 4;
        att_tx         = 0;
        att_rx         = 0;
        bands          = [78];
        max_pdschReferenceSignalPower = -27;
        max_rxgain                    = 75;
        sf_extension                  = 0;
        eNB_instances  = [0];
        ru_thread_core = 9;
        sl_ahead       = 10;
        tr_preference  = "raw_if4p5"; # important: activate FHI7.2
        do_precoding   = 0; # needs to match O-RU configuration
      }
      );  

      log_config: {
        global_log_level = "info";
        hw_log_level = "info";
        phy_log_level = "info";
        mac_log_level = "info";
        rlc_log_level = "info";
        f1ap_log_level = "info";
      };

      fhi_72 = {
        dpdk_devices = ("{{ .Values.vf.pciAddress }}"); # one VF can be used as well
        system_core = 0;
        io_core = 1;
        worker_cores = (2);
        ru_addr = ("70:b3:d5:e1:5d:91");
        mtu = 9600;
        fh_config = ({
          T1a_cp_dl = (419, 470);
          T1a_cp_ul = (0, 100);
          T1a_up = (294, 345);
          Ta4 = (0, 200);
          ru_config = {
            iq_width = 9;
            iq_width_prach = 9;
          };
        });
      };
  preStop.py: |
    import re
    import time
    import subprocess

    while True:
      try:
        with open("/tmp/rt_status.txt", "r") as f:
          status = f.read().strip()
          if status == "999":
            break
      except FileNotFoundError:
        pass
      time.sleep(0.1)

    # Get all PIDs for nr-softmodem
    ps_output = subprocess.check_output("pgrep -f nr-softmodem", shell=True).decode().strip().split('\n')
    pids = list(set(ps_output))  # remove duplicates if any

    for pid in pids:
      try:
        # Get threads of the process
        threads_output = subprocess.check_output(f"ps -T -p {pid}", shell=True).decode()
        thread_ids = re.findall(rf"^{pid}\s+(\d+)", threads_output, re.MULTILINE)

        for tid in thread_ids:
          print(f"Setting TID {tid} (PID {pid}) to FIFO priority 1")
          subprocess.run(["sudo", "chrt", "-f", "-p", "1", tid], check=True)
      except subprocess.CalledProcessError as e:
        print(f"Failed to process PID {pid}: {e}")

    # Write 0 to /tmp/rt_status.txt
    with open("/tmp/rt_status.txt", "w") as f:
      f.write("0")
